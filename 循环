//语言结构：1、顺序结构，2、选择结构，3、循环结构
//分支语句if switch和循环语句while for do while
#include<stdio.h>
#include<windows.h>
int main()
{
	int age = 18;
	if (age <= 12)
		printf("幼年\n");
	else if (12 <= age && age < 18)
		printf("少年\n");
	else if (age >= 18 && age < 30)
		printf("青年\n");
	else if (age >= 30 && age < 50)
		printf("壮年\n");
	else if (age >= 50 && age < 90)
		printf("老年\n");
	else
		printf("龟\n");
	return 0;
}

int main()
{
	int a = 5;
	int b = 3;
	if (a>b) {
		return 1;
	}
	return 2;
	return 0;
}

int main()
{
	int num = 1;
	if (num = 5)
		printf("hehe\n");
	if (5 == num)
		printf("haha\n");
	return 0;
}

int main()//奇偶判断
{
	int num;
	printf("请输入一个数：\n");
	scanf("%d", &num);
	//printf("%d\n", num );
	if (1 == num % 2)
		printf("这个数是奇数\n");
	else
		printf("这个数是偶数\n");

	return 0;
}

int main()
{
	int i = 1;
	for (i = 1; i <= 100;i++)
	{
		if (1 == i % 2)
			printf("%d\n", i);
	}
	return 0;
}

int main()
{
	int day = 0;
	scanf("%d", &day);
	switch (day)
	{
	case 1:
		printf("星期一\n");
		break;
	case 2:
		printf("星期二\n");
		break;
	case 3:
		printf("星期三\n");
		break;
	case 4:
		printf("星期四\n");
		break;
	case 5:
		printf("星期五\n");
		break;
	case 6:
		printf("星期六\n");
		break;
	case 7:
		printf("星期日\n");
		break;
	default:
		printf("输入错误\n");
		break;
	}
	return 0;
}

int main()
{
	int n = 1;
	int m = 2;
	switch (n)
	{
	case 1:
		m++;
	case 2:
		n++;
	case 3:
		switch (n)
		{//switch允许嵌套使用
		case 1:
			n++;
		case 2:
			m++;
			n++;
			break;
		}
	case 4:
		m++;
		break;
	default:
		break;
	}
	printf("m = %d, n = %d\n", m, n);
	return 0;
}

int main()
{
	int ch = 0;
	/*ctrl+z 以结束程序
	EOF - end of file -> -1*/
	while ((ch = getchar()) != EOF)
		putchar(ch);
	return 0;
}

int main()
{
	int i = 1;
	while (i <= 10)
	{
		printf("%d ", i);
		i += 1;
	}
	return 0;
}

计算n的阶乘
int main()
{
	int i = 1;
	int j = 1;
	int n = 0;
	printf("请输入阶乘数n：");
	scanf("%d", &n);
	for (; i <= n; i++)
	{
		j = j * i;
	}
	printf("结果为：%d\n", j);
	return 0;
}

int main()
{
	int i = 0;
	do
	{
		printf("%d ", i);
		i++;
	}
	while (i <= 10);
	return 0;
}

int main()
{
	int i, j;
	for (i = 0, j = 0; j = 0; i++, j++)
		j++;
	return 0;
}

int main()
{
	int i, j;
	for (i = 0, j = 0; i < 2 && j < 5; ++i, j++)
		printf("hehe\n");
	return 0;
}

int main()
{
	for (int i = 0, i < 11, i++)
	{
		if (i = 5)
			printf("haha\n");//开启死循环
		printf("hehe\n");
	}
	return 0;
}

int main()
{
	for (int i = 0; i <= 10; i++)
	{
		printf("%d ", i);
	}
	return 0;
}

int main()
{
	int ret = 0;
	char password[20] = { 0 };
	printf("请输入密码:>");
	scanf("%s", password);//从输入缓存区中读取走了123456，剩下了\n
	while ((ret = getchar()) != '\n')
	{
		;
	}
	//取走\n
	printf("请确认（Y/N):>");
	ret = getchar();//直接读取了剩下的\n
	if (ret == 'Y')
		printf("成功\n");
	else
		printf("失败\n");
	return 0;
}

//计算10及以内阶乘的和
int main()
{
	int i, j, k,sum;
	for (k = 1, sum = 0; k < 11; k++)
	{
		for (i = 1, j = 1; i <= k; i++)
		{
			j = j * i;
		}
		sum = sum + j;
	}
	printf("%d\n", sum);
	return 0;
}

//字符从两端移动到中心
//hello world!!!
//##############
//h############!
//...
int main()
{
	char arr1[] = "welcome to bit!!!";
	char arr2[] = "#################";
	int left = 0;
	int right = strlen(arr1) - 1;
	printf("%s\n", arr2);
	//while循环实现
	while (left <= right)
	{
		Sleep(1000);
		arr2[left] = arr1[left];
		arr2[right] = arr1[right];
		system("cls");
		left++;
		right--;
		printf("%s\n", arr2);
	}
	printf("%s\n", arr2);
	return 0;
}

int	main()
{
	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int left = 0;
	int right = sz-1;
	int n = 0;
	printf("请输入需要查找的元素：");
	scanf("%d\n", &n);
	while (left <= right)
	{
		int mid = (right + left) / 2;
		if (arr[mid] > n)
		{
			right = mid - 1;
		}
		else if (arr[mid] < n)
		{
			left = mid + 1;
		}
		else
		{
			printf("对应元素下标为：%d", n);
			break;
		}
		if (left > right)
		{
			printf("无对应元素\n");
		}
	}
	return 0;
}

有序数组中查找特定数字
int main()
{
	int arr[10]={1,2,3,4,5,6,7,8,9,10};
	int i = 0;
	int n = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);
	printf("请输入需要查找的元素：\n");
	scanf("%d",&n);
	for (; i <= sz; i++)
	{
		if (n == arr[i])
		{
			printf("元素下标为：%d\n", i);
			break;
		}
	}
	if (i == sz + 1)
	{
		printf("未找到元素\n");
	}
	return 0;
}

计算n及以内阶乘的和(算法优化)
int main()
{
	int i, j, ret, sum, n;
	printf("请输入一个自然数：");
	scanf("%d", &n);
	for (i = 1, sum = 0,ret=1; i <= n; i++)
	{
		ret = ret * i;
		sum = sum + ret;
	}
	printf("阶乘之和为：%d\n", sum);
	return 0;
}

int main()
{
	char a[10];
	scanf("%s", &a);
	int sz = strlen(a);
	printf("%d %s\n", sz,a);
	return 0;
}

int main()
{
	char name[20] = { 0 };
	char Name[20] = { 0 };
	char password[20] = { 0 };
	char Password[20] = { 0 };
	char rest;
	int i = 0;
	printf("请输入注册账号：\n");
	scanf("%s", name);
	rest=getchar();
	printf("请输入设定的密码：\n");
	scanf("%s", password);
	rest=getchar();
	printf("请输入账号：\n");
	scanf("%s", Name);
	printf("请输入密码：\n");
	for ( ; i < 3; i++)
	{
		scanf("%s", Password);
		if (0 == strcmp(name, Name) && 0 == strcmp(password, Password))//等号不能用来比较字符串相等，需要库函数strcmp(相等返回0)
		{
			printf("登录成功\n");
			break;
		}
		else
		{
			if (i < 2)
			{
				printf("登录失败,请重新输入：\n");
			}
		}
	}
	if (i == 3)
	{
		printf("登录大失败，请不要再试\n");
	}
	return 0;
}
