#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <Windows.h>
#include <stdlib.h>
#include <math.h>

//求字符串长度
int mystrlen(char* arr)
{
	//int i = 0;
	//while (*arr != '\0')
	//{
	//	i++;
	//	arr++;
	//}
	//return i;

	//不使用临时变量
	if (*arr != '\0')
	{
		return 1 + mystrlen(arr + 1);
	}
	else
		return 0;
	
}
int main()
{
	char arr[] = "bit";
	int len = strlen(arr);//求字符串长度
	int len1 = mystrlen(arr); //数组的形参是一个物理地址
	printf("%d\n", len);
	printf("%d\n", len1);
	return 0;
}

void print(int num)
{
	if (num > 9)
	{
		print(num / 10);
	}
		printf("%d ", num % 10);
}

int main()
{
	unsigned int num = 0;
	scanf("%d", &num);//1234=>123 4=>12 3 4=> 1 2 3 4
	print(num);
	return 0;
}

//函数递归：1、直接或间接引用自身；2、逐渐接近限制条件
int main()
{
	printf("hehe\n");
	main();
	return 0;//会出现Stack overflow 栈溢出。内存主要划分为栈区（局部变量、函数形参）、堆区（动态开辟的内存）、静态区（全局变量）。嵌套形式会不断占用栈区内存，最终栈溢出。
}


//函数的声明集合在头文件中（xxx.h），函数定义在相关源文件中（xxx.c），引用库中的函数用<>，而自建的函数头文件需要使用双引号“”

#include "add.h"   //引用的格式，编译器会将.h文件中所有内容全部拷贝过来，可能有重复的函数名称，所以头文件开头格式会有所不同

int main()
{
	int x = 10;
	int y = 20;
	int sum = add(x, y);
	printf("%d\n", sum);
	return 0;
}


int main()
{
	printf("%d", printf("%d", printf("%d", 43))); //返回打印的字符个数
	return 0;
}

//有序数组中寻找特定的数/二分法
int search(int x, int y[], int right)//传过来的y[]是arr[]首元素的地址
{
	int left = 0;
	int ret = 0;
	while (left <= right)
	{
		ret = (left + right) / 2;
		if (y[ret] == x)
		{ 
			return ret;
		}	
		else if(y[ret] < x)
		{
			left = ret + 1;
		}
		else if (y[ret] > x)
		{
			right = ret - 1;
		}
	}
		return -1;
}
int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int aim = 0;
	int num = 0;
	int right = sizeof(arr) / sizeof(arr[0]) - 1; //数组传参后数组元素个数无法用sizeof计算
	printf("请输入需要寻找的数：-> ");
	scanf("%d", &aim);
	num = search(aim, arr, right);
	if (num != -1)
	{
		printf("所找数对应序号为：%d\n", num);
	}
	else
		printf("查无此数");
	
	return 0;
}


//打印闰年
int is_leap_year(int x)
{
	if ((x%4 == 0 && x % 100 != 0) || x % 400 == 0)
	{
		return 1;
	}
	return 0;
}
int main()
{
	int year = 0;
	for (year = 1000; year <= 2000; year++)
	{
		if(is_leap_year(year) == 1)
			printf("%d ",year);
	}
	return 0;
}

//打印100至200之间的素数，判断一个数是不是素数；调用函数形式
int is_prime(int i)
{
	int j = 0;
	for (j = 2; j <= sqrt(i); j++)
	{
		if (i % j == 0)
		{
			return 0;
		}
	}
	return 1;
}
int main()
{
	int i = 0;
	for (i = 100; i <= 200; i++)
	{
		if (is_prime(i) == 1)
		{
			printf("%d ", i);
		}
	}
	return 0;

}

//传址调用
void change(int* a, int* b)//传递来的参数地址不一样，交换后原地址参数未改变
{
	int c = 0;			//取地址符与解引用操作
	c = *a;
	*a = *b;
	*b = c;
}
int main()
{
	int i = 10;
	int j = 20;
	printf("i = %d j = %d\n", i, j);
	change(&i, &j);//&i和&j是实参，传递到change后的a和b是形参，形参是实参的临时拷贝，修改形参对实参无影响。 
	printf("i = %d j = %d\n", i, j);
	return 0;
  }

//加法函数//传值调用
int add(int x, int y) 
{
	int z;
	z = x + y;
	return z;
}
int main()
{
	int x = 20;
	int y = 10;
	int sum = add(x, y);
	printf("% d\n", sum);
	return 0;
}
